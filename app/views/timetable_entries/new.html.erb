<%-# Fedena
#Copyright 2010 Foradian Technologies Private Limited
#
#This product includes software developed at
#Project Fedena - http://www.projectfedena.org/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License. -%>
<script type="text/javascript">

  var selected_divs = new Array();
  Position.includeScrollOffsets=true;
  function update_selected_divs(id) {
    var exists_in_list = 0;
    for (x in selected_divs)
      if(id == selected_divs[x]){
        exists_in_list = 1;
        selected_divs.splice(x, 1)
        $('drop_' + id).className = "drop";
        $('accept_'+id).checked=false;
      }
    if(!exists_in_list){
      $('drop_' + id).className = "selected_div";
      $('accept_'+id).checked=true;
      selected_divs.push(id);
    }
  }

  function clear_selected_divs() {
    selected_divs = [];
  }

  function make_ajax_calls(tte_id, emp_sub_id){
    if (selected_divs.length == 0) {
<%= remote_function(
  :url => {:action => "update_multiple_timetable_entries2"},
  :with => "'emp_sub_id=' + emp_sub_id + '&tte_ids=' + tte_id + '&timetable_id=' + #{@timetable.id}", :success => "clear_selected_divs()") %>
    }
    else if (selected_divs.length == 1) {
<%= remote_function(
  :url => {:action => "update_multiple_timetable_entries2"},
  :with => "'emp_sub_id=' + emp_sub_id + '&tte_ids=' + tte_id + '&timetable_id=' + #{@timetable.id}", :success => "clear_selected_divs()") %>
      if (selected_divs[0] == tte_id) selected_divs.pop();
    }
    else {
      var exists_in_list = 0;
      for (x in selected_divs)
        if(tte_id == selected_divs[x])
          exists_in_list = 1;
      if (exists_in_list) {
        tte_list = selected_divs.join(',');
<%= remote_function(
  :url => {:action => "update_multiple_timetable_entries2"},
  :with => "'emp_sub_id=' + emp_sub_id + '&tte_ids=' + tte_list + '&timetable_id=' + #{@timetable.id}", :success => "clear_selected_divs()") %>
        selected_divs = [];
      }
      else
<%= remote_function(
  :url => {:action => "update_multiple_timetable_entries2"},
  :with => "'emp_sub_id=' + emp_sub_id + '&tte_ids=' + tte_id + '&timetable_id=' + #{@timetable.id}", :success => "clear_selected_divs()") %>
      }
    }
    function make_other_ajax_calls(emp_sub_id){
      for (x in selected_divs)
        tte_list = selected_divs.join(',');
<%= remote_function(
  :url => {:action => "update_multiple_timetable_entries2"},
  :with => "'emp_sub_id=' + emp_sub_id + '&tte_ids=' + tte_list + '&timetable_id=' + #{@timetable.id}", :success => "clear_selected_divs()") %>
      selected_divs = [];
    }

</script>
<%= javascript_include_tag 'timetable_entries' %>
<div id="content-header">
<%#= stylesheet_link_tag("timetable/new_timetable.css") %>
  <%= show_header_icon %>
  <h1><%= t('timetable_text') %></h1>
  <div class='header-sep'>|</div>
  <div class='sub-header'><%= t('create_timetable') %></div>
  <div id="inner-tab-menu">
    <ul>
      <% if (permitted_to? :subject_assignment,:employee) %>
        <li class='themed_bg themed-dark-hover-background'><%= link_to "#{t('employee_subject_association')}",:controller=>"employee", :action=>"subject_assignment" %></li>
      <% end %>
    </ul>
  </div>
</div>
<div id="page-yield">
  <div class="bread_crumb">
    <%= breadcrumb :timetable_entries_new, @timetable %>
    <%= render_breadcrumbs  %>
  </div>
  <div class="box">
    <% unless flash[:notice].nil? %>
      <p class="flash-msg"> <%= flash[:notice] %> </p>
    <% end %>

    <div class="label-field-pair">
      <%= hidden_field_tag :timetable_id,@timetable.id  %>
      <label for="timetable_entry_course_id"><%= t('select_a_batch') %>
        <%= image_tag("loader.gif",:align => "absmiddle",:border => 0,:id => "loader", :style =>"display: none;" ) %>
      </label>
      <div class="text-input-bg">
        <%= select :batch, :id,
          @batches.map {|b| [b.full_name, b.id] },
          {:prompt => t('select_a_batch')},
          {:onchange => "#{remote_function(
          :url => { :action => 'new_entry' },
          :with => "'batch_id='+value + '&timetable_id=' +#{@timetable.id}",
          :before => "Element.show('loader')",
          :success => "Element.hide('loader')"  )}"} %>
      </div>
    </div>
    <div id="render_area">

      <div>
        <% if params[:edit].present? %>
          <% form_remote_for @timetable,:url=>{:controller=>:timetable,:action=>:update} , :before=>"$('submit_button').disable()",:complete=>"setTimeout(function(){$('submit_button').enable();},5000)"do |f| %>

            <%= f.hidden_field :tt_id,:value=>@timetable.id %>
            <div class="label-field-pair">
              <label for="start_date"><%= t('start_date') %></label>
              <div class="text-input-bg">
                <%= f.date_select :start_date,:use_month_numbers=>true,:start_year=>1.years.ago.year,:end_year=>1.years.since.year,:order=>[:day,:month,:year],:include_blank => false%>
              </div>
            </div>

            <div class="label-field-pair">
              <label for="end_date"><%= t('end_date') %></label>
              <div class="text-input-bg">
                <%= f.date_select :end_date,:use_month_numbers=>true,:start_year=>1.years.ago.year,:end_year=>1.years.since.year,:order=>[:day,:month,:year],:include_blank => false %>
              </div>
            </div>
            <%= submit_tag "", :value => "â–º Save", :class => "submit_button" , :id => 'submit_button'%>
          <% end %>
        <% end %>
      </div>

    </div>
  </div>

</div>


<script>
    /*
    j(document).delegate('.tt-subject','mouseenter',function(){
      TOP = 'top';
      BOTTOM = 'bottom';
      j(this).children('.class_timings').children('.cross_section').removeClass('inactive_div');
      var column = document.createElement('div').addClassName("col");
      var parent = j(this).parents('.td');
      var table = j('#table-viewer');
      var tooltip = j(this).children('.class_timing_tooltip').css('display','block');
      var subjects = j(tooltip).find('.subject1');
      var table_height= j(table).height();
      var table_width = j(table).outerWidth();
      var table_top = j(table).position().top;
      var table_left = j(table).position().left;
      var table_right = table_left + table_width;
      var cell_height = j(parent).height();
      var cell_width = j(parent).width();
      var cell_top = j(parent).position().top;
      var cell_left = j(parent).position().left;
      var tooltip_height = j(tooltip).height();
      var tooltip_width = j(tooltip).outerWidth();
      var ht = height_top = cell_top - table_top - 20;
      var hb = height_bottom = (table_top + table_height) - (cell_top + cell_height) - 20;
      var wl = width_left = cell_left - table_left - 10;
      var wr = width_right = (table_left + table_width) - (cell_left + cell_width) - 10;
      var max_width = Math.max(wl,wr);
      var max_height = Math.max(ht,hb);
      var valign = max_height == hb ? BOTTOM : TOP;

      if(j(tooltip).attr('data-cache') === undefined){ //
        if(tooltip_height > max_height){ // data overflow in tooltip
          var tooltip_width_a = 0;
          var left,atop, col = j(column).clone();
          var c_height, height_c = 0;
          blocks = j(tooltip).find('.block');
          block_width = blocks.first().outerWidth();
          var cnt = blocks.length;
          tooltip_width_a = block_width; //tooltip_width;
          j(blocks).each(function(a,b){ // grouping subject blocks
            c_height = j(b).height();

            if(height_c + c_height > max_height - 100){
              height_c = c_height;
              tooltip_width_a += block_width;
              subjects.append(col);
              col = j(column).clone();
              j(col).append(b);
            }else{
              height_c += c_height;
              col.append(b);
            }
            if((a+1)==cnt)
              subjects.append(col);            
          });

          if(tooltip_width_a > table_width - 20 || tooltip_width_a > max_width){
            j(subjects).css('width',tooltip_width_a);
            tooltip_width_a = max_width < table_width - 20 && tooltip_width_a > table_width ? table_width - 50 : (tooltip_width_a + 20 > table_width ? table_width - 50 : tooltip_width_a);
            j(tooltip).css('width', tooltip_width).css('overflow-x','auto').css('overflow-y','hidden');
          }
          
          if(max_height < tooltip_height){
            j(tooltip).css('height',max_height);
            j(subjects).css('max-height',max_height-30);
          }
          tooltip_width = j(tooltip).css('width',tooltip_width_a).outerWidth();
          tooltip_height = j(tooltip).height();
          
          cols = j(tooltip).find('.col');
          cols.first().addClass('no_border');
          cols.css('height',Math.max.apply(null,cols.map(function() { return j(this).height()}).get())-20);
          
        }

        left = cell_left + 20;
        new_left = left+tooltip_width;
        extra = (left + tooltip_width - table_right);
        cell_left_gap = cell_left - table_left;

        left += (new_left == table_right) ? (tooltip_width - 10) : ((new_left > table_right && extra > 0) ? -(extra-cell_left_gap >= 0 ? (extra-cell_left_gap+10) : extra+10 ): 0);

        atop = (valign == TOP ? cell_top-tooltip_height - 8 : cell_top + 100);
        if(atop+tooltip_height > table_height+table_top && valign == BOTTOM)
          atop = atop - ((atop+tooltip_height) - (table_height+table_top));        
        
        j(tooltip).css('display','block').offset({'top': atop,'left': left}).attr('data-cache',true);
      }else{
        j(tooltip).css('display','block');
      }
    });

    j(document).delegate('.tt-subject','mouseleave',function(){
      j(this).children('.class_timings').children('.cross_section').addClass('inactive_div');
      j(this).children('.class_timing_tooltip').css('display','none');
    });

    j(document).delegate('.cross_section','mouseenter',function(){ j(this).addClass('red_back'); });
    j(document).delegate('.cross_section','mouseleave',function(){ j(this).removeClass('red_back'); });
*/
</script>